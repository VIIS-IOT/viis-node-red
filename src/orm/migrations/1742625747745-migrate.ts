import { MigrationInterface, QueryRunner } from "typeorm";

export class Migrate1742625747745 implements MigrationInterface {
    name = 'Migrate1742625747745'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`tabiot_schedule_plan\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`label\` varchar(255) NOT NULL, \`schedule_count\` int NOT NULL DEFAULT '0', \`status\` enum ('active', 'inactive') NOT NULL DEFAULT 'inactive', \`enable\` tinyint NULL, \`is_synced\` tinyint NOT NULL DEFAULT '0', \`is_from_local\` int NOT NULL DEFAULT '1', \`device_id\` varchar(255) NULL, \`start_date\` date NULL, \`end_date\` date NULL, \`is_deleted\` tinyint NOT NULL DEFAULT '0', PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_schedule\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`device_id\` varchar(255) NULL, \`action\` mediumtext NULL, \`enable\` tinyint NOT NULL DEFAULT '1', \`label\` varchar(255) NULL, \`set_time\` time NULL, \`start_date\` date NULL, \`end_date\` date NULL, \`type\` enum ('', 'circulate', 'period', 'fixed', 'interval') NOT NULL DEFAULT '', \`interval\` varchar(255) NULL, \`start_time\` time NULL, \`end_time\` time NULL, \`is_from_local\` tinyint NULL, \`is_synced\` smallint NULL, \`is_deleted\` tinyint NOT NULL DEFAULT '0', \`status\` enum ('running', 'stopped', 'finished', '') NOT NULL DEFAULT '', \`schedule_plan_id\` varchar(255) NULL, PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_schedule_log\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`start_time\` time NULL, \`end_time\` time NULL, \`schedule_id\` varchar(255) NULL, PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_device_profile\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`tb_device_profile_id\` varchar(255) NULL, \`label\` varchar(255) NULL, \`type\` varchar(255) NULL, \`image\` varchar(255) NULL, \`transport_type\` enum ('DEFAULT', 'MQTT', 'CoAP', 'LWM2M', 'SNMP') NULL, \`provision_type\` enum ('DISABLED', 'ALLOW_CREATE_NEW_DEVICES') NULL, \`profile_data\` json NULL, \`description\` varchar(255) NULL, \`is_default\` tinyint NULL, \`firmware_id\` varchar(255) NULL, \`software_id\` varchar(255) NULL, \`default_rule_chain_id\` varchar(255) NULL, \`default_dashboard_id\` varchar(255) NULL, \`default_queue\` varchar(255) NULL, \`provision_device_key\` varchar(255) NULL, PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_production_function\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`type\` varchar(255) NULL, \`label\` varchar(255) NULL, \`identifier\` varchar(255) NULL, \`data_type\` enum ('Bool', 'Value', 'Enum', 'Raw', 'String', 'Group Break', 'Tab Break', 'IP', 'Checkbox-bit', 'User data type') NULL, \`icon_url\` varchar(255) NULL, \`data_on_text\` varchar(255) NULL, \`data_off_text\` varchar(255) NULL, \`enum_value\` varchar(255) NULL, \`unit\` varchar(255) NULL, \`data_permission\` enum ('r', 'rw', 'w') NULL, \`description\` text NULL, \`device_group_function_id\` varchar(255) NULL, \`data_measure_max\` varchar(255) NULL, \`data_measure_min\` varchar(255) NULL, \`data_eligible_max\` varchar(255) NULL, \`data_eligible_min\` varchar(255) NULL, \`checkbox_bit_label1\` varchar(255) NULL, \`checkbox_bit_label2\` varchar(255) NULL, \`checkbox_bit_label3\` varchar(255) NULL, \`checkbox_bit_label4\` varchar(255) NULL, \`checkbox_bit_label5\` varchar(255) NULL, \`checkbox_bit_label6\` varchar(255) NULL, \`checkbox_bit_label7\` varchar(255) NULL, \`checkbox_bit_label8\` varchar(255) NULL, \`chart_type\` enum ('', 'Line', 'Text', 'Text_Line', 'Gauge', 'Card') NULL, \`round_type\` enum ('', 'Raw', 'Round', 'Float_1', 'Float_2', 'Float_3', 'Float_6') NULL, \`md_size\` int NULL, \`show_chart\` tinyint NULL, \`index_sort\` int NULL, \`device_profile_id\` varchar(255) NULL, PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_device\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`id\` varchar(255) NULL, \`is_gateway\` tinyint NOT NULL DEFAULT '1', \`serial_number\` varchar(255) NULL, \`device_id_thingsboard\` varchar(255) NULL, \`access_token_thingsboard\` text NULL, \`description\` varchar(255) NULL, \`device_profile\` varchar(255) NULL, \`zone_id\` varchar(255) NULL, \`zone_name\` varchar(255) NULL, \`type\` varchar(255) NULL, \`label\` varchar(255) NULL, \`firmware_id\` varchar(255) NULL, \`software_id\` varchar(255) NULL, \`customer_name\` varchar(255) NULL, \`image\` varchar(255) NULL, \`device_profile_id\` varchar(255) NULL, UNIQUE INDEX \`IDX_beafdcdca7e045dfb0d68d370f\` (\`id\`), PRIMARY KEY (\`name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_device_telemetry_latest\` (\`device_id\` varchar(255) NOT NULL, \`key_name\` varchar(255) NOT NULL, \`timestamp\` bigint NOT NULL, \`boolean_value\` tinyint NULL, \`int_value\` int NULL, \`float_value\` float NULL, \`string_value\` text NULL, PRIMARY KEY (\`device_id\`, \`key_name\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabiot_device_telemetry\` (\`id\` int NOT NULL AUTO_INCREMENT, \`device_id\` varchar(255) NULL, \`timestamp\` bigint NOT NULL, \`key_name\` varchar(255) NOT NULL, \`value_type\` enum ('int', 'float', 'string', 'boolean', 'json') NOT NULL, \`int_value\` int NULL, \`float_value\` float NULL, \`string_value\` varchar(255) NULL, \`boolean_value\` tinyint NULL, \`json_value\` json NULL, UNIQUE INDEX \`IDX_10ebf866c92988aca3a3e94129\` (\`device_id\`, \`timestamp\`, \`key_name\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`device_offline_automation_intents\` (\`creation\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`_user_tags\` text NULL, \`_comments\` text NULL, \`_assign\` text NULL, \`_liked_by\` text NULL, \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` smallint NOT NULL DEFAULT '0', \`idx\` bigint NOT NULL DEFAULT '0', \`deleted\` datetime(6) NULL, \`id\` varchar(36) NOT NULL, \`label\` varchar(255) NULL, \`enable\` tinyint NOT NULL DEFAULT '1', \`intent_json\` json NULL, \`device_id\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`tabiot_schedule\` ADD CONSTRAINT \`FK_4f3fa51bdcb252c4869ac67c8ae\` FOREIGN KEY (\`schedule_plan_id\`) REFERENCES \`tabiot_schedule_plan\`(\`name\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tabiot_schedule_log\` ADD CONSTRAINT \`FK_82dbff0216b4f3ef0f543d2c07b\` FOREIGN KEY (\`schedule_id\`) REFERENCES \`tabiot_schedule\`(\`name\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tabiot_production_function\` ADD CONSTRAINT \`FK_9fc556cd6d9ccfdd305e9f77f25\` FOREIGN KEY (\`device_profile_id\`) REFERENCES \`tabiot_device_profile\`(\`name\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tabiot_device\` ADD CONSTRAINT \`FK_803f66858054f399391d92e5f98\` FOREIGN KEY (\`device_profile_id\`) REFERENCES \`tabiot_device_profile\`(\`name\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tabiot_device_telemetry_latest\` ADD CONSTRAINT \`FK_47ac20dfac901a971b28b5d4ea3\` FOREIGN KEY (\`device_id\`) REFERENCES \`tabiot_device\`(\`name\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tabiot_device_telemetry\` ADD CONSTRAINT \`FK_26704df8a691ecb44c435e87ef9\` FOREIGN KEY (\`device_id\`) REFERENCES \`tabiot_device\`(\`name\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`device_offline_automation_intents\` ADD CONSTRAINT \`FK_d8226ed2510b2417ad5d78edb00\` FOREIGN KEY (\`device_id\`) REFERENCES \`tabiot_device\`(\`name\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`device_offline_automation_intents\` DROP FOREIGN KEY \`FK_d8226ed2510b2417ad5d78edb00\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_device_telemetry\` DROP FOREIGN KEY \`FK_26704df8a691ecb44c435e87ef9\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_device_telemetry_latest\` DROP FOREIGN KEY \`FK_47ac20dfac901a971b28b5d4ea3\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_device\` DROP FOREIGN KEY \`FK_803f66858054f399391d92e5f98\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_production_function\` DROP FOREIGN KEY \`FK_9fc556cd6d9ccfdd305e9f77f25\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_schedule_log\` DROP FOREIGN KEY \`FK_82dbff0216b4f3ef0f543d2c07b\``);
        await queryRunner.query(`ALTER TABLE \`tabiot_schedule\` DROP FOREIGN KEY \`FK_4f3fa51bdcb252c4869ac67c8ae\``);
        await queryRunner.query(`DROP TABLE \`device_offline_automation_intents\``);
        await queryRunner.query(`DROP INDEX \`IDX_10ebf866c92988aca3a3e94129\` ON \`tabiot_device_telemetry\``);
        await queryRunner.query(`DROP TABLE \`tabiot_device_telemetry\``);
        await queryRunner.query(`DROP TABLE \`tabiot_device_telemetry_latest\``);
        await queryRunner.query(`DROP INDEX \`IDX_beafdcdca7e045dfb0d68d370f\` ON \`tabiot_device\``);
        await queryRunner.query(`DROP TABLE \`tabiot_device\``);
        await queryRunner.query(`DROP TABLE \`tabiot_production_function\``);
        await queryRunner.query(`DROP TABLE \`tabiot_device_profile\``);
        await queryRunner.query(`DROP TABLE \`tabiot_schedule_log\``);
        await queryRunner.query(`DROP TABLE \`tabiot_schedule\``);
        await queryRunner.query(`DROP TABLE \`tabiot_schedule_plan\``);
    }

}
